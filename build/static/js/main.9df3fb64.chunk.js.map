{"version":3,"sources":["Components/Header/Logo.jpg","Components/Header/Header.jsx","Components/Calendar/Calendar.js","Components/popUp/PopUp.jsx","Components/Calendar/Calendar.jsx","Components/Home/Home.jsx","Components/About/About.jsx","App.js","redux/actions/actionDisplay.js","redux/actions/actionDate.js","serviceWorker.js","redux/info.js","redux/index.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","activeClassName","Component","DAYS_IN_MONTH","Month","arrEqual","a","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","daysInMonth","daysDaysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","getDay","day","i","j","undefined","PopUp","onCLose","props","close","numDay","dayInWeek","onClick","this","type","defaultValue","checkMonth","checkDay","Calendar","state","currentDate","handlePrevMonthBtnClick","setState","handleNextMonthBtnClick","handleDayClick","setDate","setDisplay","closePopUp","monthNames","years","weekDayNames","monthData","calendar","selectedDate","map","week","index","key","classnames","name","display","defaultProps","App","exact","path","render","setDisplayPop","connect","dateInfo","displayPop","dispatch","payload","setDisplayPopAction","setDateAction","Boolean","window","location","hostname","match","_initialState","rootReduser","combineReducers","action","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,uVCKtBC,E,uKAEb,OACI,4BAAQC,UAAU,UACd,kBAAC,IAAD,CAASC,GAAG,KAAI,yBAAKD,UAAU,eAAeE,IAAKC,IAAMC,IAAI,UAC7D,yBAAKJ,UAAU,eACX,kBAAC,IAAD,CAASC,GAAG,IAAKD,UAAU,oBAA3B,QACA,kBAAC,IAAD,CAASC,GAAG,SAASD,UAAU,oBAAoBK,gBAAgB,kBAAnE,kB,GAPgBC,a,+BCJ9BC,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE7DC,EAEQ,EAaP,SAASC,EAASC,EAAEC,GACvB,SAAID,IAAMC,KAGND,EAAEE,gBAAkBD,EAAEC,eACtBF,EAAEG,aAAeF,EAAEE,YACnBH,EAAEI,WAAaH,EAAEG,WA2BlB,SAASC,EAAaC,EAAMC,GAO/B,IANA,IAAMC,EAAS,GACTC,EAAO,IAAIC,KAAKJ,EAAKC,GACrBI,EApBH,SAAwBF,GAC3B,IAAMF,EAAQE,EAAKN,WACbG,EAAOG,EAAKP,cACZU,EAAkBf,EAAcU,GAEtC,OAVG,SAAoBD,GACvB,QAAUA,EAAO,KAASA,EAAO,MAASA,EAAO,KAS9CO,CAAWP,IAASC,IAAUT,EAEtBc,EAAgB,EAIhBA,EASSE,CAAeL,GAC7BM,EAAgBN,EAAKO,SACvBC,EAAM,EAEFC,EAAG,EAAEA,GAAIP,EAAcI,GA1Dd,EA0D4CG,IAC7D,CACIV,EAAOU,GAAK,GAEZ,IAAI,IAAIC,EAAE,EAAGA,EA9DA,EA8DkBA,IAIvBX,EAAOU,GAAGC,GAFJ,IAAND,GAAWC,EAAIJ,GAAkBE,EAAMN,OAExBS,EAIA,IAAIV,KAAKJ,EAAMC,EAAOU,KAMjD,OAAOT,E,gBCtEUa,E,4MACjBC,QAAU,WACN,EAAKC,MAAMC,S,yDAGJf,GAEP,MADiB,CAAC,UAAU,WAAY,QAAQ,QAAS,MAAM,OAAQ,OAAQ,SAAU,YAAY,UAAW,WAAY,YAC1GA,K,+BAGbgB,EAAOC,GAiCZ,MAAM,GAAN,OA7BID,GAFU,IAAXA,EAES,KAEK,IAATA,EAEI,KAEO,IAAXA,EAEI,KAEO,KAAXA,EAEI,KAEK,KAATA,EAEI,KAEO,KAAXA,EAEI,KAEK,KAATA,EAEI,KAGA,KAEZ,YAhCmB,CAAE,SAAS,SAAW,UAAW,YAAa,WAAY,SAAU,YAgCtDC,M,+BAIjC,OACI,yBAAKpC,UAAU,SACX,yBAAKA,UAAU,eACf,uBAAGA,UAAU,iBAAiBqC,QAASC,KAAKN,SAA5C,UAEA,yBAAKhC,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,qBAAhB,SACA,2BAAOA,UAAU,qBAAqBuC,KAAK,OAAOC,aAAcF,KAAKG,WAAYH,KAAKL,MAAMd,KAAKN,eAErG,yBAAKb,UAAU,kBACX,0BAAMA,UAAU,uBAAhB,OACA,2BAAOA,UAAU,uBAAuBuC,KAAK,OAAOC,aAAcF,KAAKI,SAAUJ,KAAKL,MAAMd,KAAKL,UAAUwB,KAAKL,MAAMd,KAAKO,mB,GA3DhHpB,aCCdqC,E,4MASjBC,MAAQ,CACJzB,KAAM,EAAKc,MAAMd,KACjB0B,YAAa,IAAIzB,M,EAcrB0B,wBAA0B,WACtB,IAAM3B,EAAO,IAAIC,KAAK,EAAKJ,KAAM,EAAKC,MAAO,GAC7C,EAAK8B,SAAS,CAAC5B,U,EAGnB6B,wBAA0B,WACtB,IAAM7B,EAAO,IAAIC,KAAK,EAAKJ,KAAM,EAAKC,MAAO,GAC7C,EAAK8B,SAAS,CAAC5B,U,EAGnB8B,eAAiB,SAAC9B,GACb,EAAKc,MAAMiB,QAAQ/B,GACnB,EAAKc,MAAMkB,YAAW,I,EAG3BC,WAAa,WAET,OAAO,EAAKnB,MAAMkB,YAAW,I,uDAGxB,IAAD,SACsCb,KAAKL,MAAlCoB,GADT,EACGC,MADH,EACSD,YAAWE,EADpB,EACoBA,aAClBC,EAAYC,EAAsBnB,KAAKtB,KAAMsB,KAAKrB,OAFpD,EAGgCqB,KAAKM,MAAlCC,EAHH,EAGGA,YAAaa,EAHhB,EAGgBA,aACpB,OACI,yBAAK1D,UAAU,YACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,yBACX,4BAAQqC,QAASC,KAAKQ,wBAAyB9C,UAAU,8BAA8B,KACvF,2BACMqD,EAAWf,KAAKrB,QAEtB,2BACKqB,KAAKtB,MAEV,4BAAQqB,QAASC,KAAKU,wBAAyBhD,UAAU,+BAA+B,MAE5F,2BAAOA,UAAU,2BACb,+BACSwD,EAAUG,KAAI,SAACC,EAAMC,GAAP,OACX,wBAAIC,IAAKD,EAAO7D,UAAU,QACrB4D,EAAKD,KAAI,SAACxC,EAAK0C,GAAN,OAAe1C,EACzB,wBAAIkB,QAAS,kBAAK,EAAKY,eAAe9B,IAAO2C,IAAKD,EAC9C7D,UAAW+D,IAAW,8BAA8B,CACpD,gCAAkCN,EAAkBtC,EAAK0B,GACzD,mCAAoCY,EAAkBtC,EAAKuC,MAC1DvC,EAAKL,WAEV,wBAAIgD,IAAKD,YAMzB,+BACI,wBAAI7D,UAAU,gCACTuD,EAAaI,KAAI,SAACK,EAAKH,GAAN,OACd,wBAAIC,IAAKD,GAAQG,WAMb,IAAvB1B,KAAKL,MAAMgC,QAAmB,kBAAC,EAAD,CAAO/B,MAAOI,KAAKc,WAAYjC,KAAMmB,KAAKL,MAAMyB,eAAkB,wC,2BAzEzG,OAAOpB,KAAKM,MAAMzB,KAAKP,gB,4BAIvB,OAAO0B,KAAKM,MAAMzB,KAAKN,a,0BAGvB,OAAOyB,KAAKM,MAAMzB,KAAKO,a,GAtBOpB,aAAjBqC,EAEVuB,aAAe,CAClB/C,KAAK,IAAIC,KACTiC,WAAY,CAAC,UAAU,WAAY,QAAQ,QAAS,MAAM,OAAQ,OAAQ,SAAU,YAAY,UAAW,WAAY,YACvHC,MAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAK,KAAK,MACnFC,aAAa,CAAE,IAAI,IAAM,IAAK,IAAK,IAAK,IAAK,M,ICRhCxD,E,uKAEb,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,sBACX,+DAEJ,yBAAKA,UAAU,qBACX,+EAAoD,6BAApD,+BAGR,yBAAKA,UAAU,eACX,kBAAC,EAAD,CAAUiE,QAAW3B,KAAKL,MAAMgC,QAASP,aAAcpB,KAAKL,MAAMyB,aACjEP,WAAYb,KAAKL,MAAMkB,WACvBD,QAASZ,KAAKL,MAAMiB,gB,GAfL5C,aCFfP,G,6KAEb,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,wBAAd,kCACI,uBAAGA,UAAU,wBAAb,+OAKA,uBAAGA,UAAU,uBAAb,yZAOA,uBAAGA,UAAU,uBAAb,8PAKA,uBAAGA,UAAU,uBAAb,otB,GAvBYM,c,YCQ9B6D,E,uKACK,IAAD,OACR,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAS,kBAAI,kBAAC,EAAD,CAAML,QAAW,EAAKhC,MAAMgC,QAC7DP,aAAc,EAAKzB,MAAMd,KAAMgC,WAAY,EAAKlB,MAAMsC,cACtDrB,QAAS,EAAKjB,MAAMiB,aACtB,kBAAC,IAAD,CAAOmB,KAAK,SAASC,OAAQ,kBAAI,kBAAC,EAAD,c,GARrBhE,aAgCHkE,mBAlBf,SAAyB5B,GACvB,MAAM,CACJqB,QAAQrB,EAAM6B,SAASC,WACvBvD,KAAMyB,EAAM6B,SAASf,iBAIzB,SAA4BiB,GACxB,MAAO,CACPJ,cAAe,SAAAN,GACbU,ECnCS,SAA6BV,GACxC,MAAO,CACH1B,KAAM,cACNqC,QAAQX,GDgCDY,CAAoBZ,KAE/Bf,QAAS,SAAA/B,GACPwD,EEtCS,SAAuBxD,GAClC,MAAO,CACHoB,KAAM,WACNqC,QAAQzD,GFmCD2D,CAAc3D,QAKdqD,CAA4CL,GG/BvCY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBClBAC,EAAgB,CAClBV,YAAY,EACZhB,aAAa,ICEjB,IAIe2B,EAJKC,YAAgB,CAChCb,SDAW,WAAgD,IAA9B7B,EAA6B,uDAArBwC,EAAcG,EAAO,uCAC1D,OAAQA,EAAOhD,MACX,IAAK,cACD,OAAO,eAAIK,EAAX,CAAkB8B,WAAWa,EAAOX,UACxC,IAAK,WACD,OAAO,eAAIhC,EAAX,CAAiBc,aAAc6B,EAAOX,UAC1C,QACI,OAAOhC,MEFb4C,EAAQC,YAAYJ,GAG1BK,IAASpB,OACP,kBAAC,IAAMqB,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,SAIRI,SAASC,eAAe,SH8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9df3fb64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.c1b22935.jpg\";","import React ,{Component} from 'react';\r\nimport { NavLink} from 'react-router-dom';\r\nimport  '../Header/Header.scss';\r\nimport logo from '../Header/Logo.jpg'\r\n\r\nexport default class Header extends Component {\r\n    render(){\r\n        return(\r\n            <header className=\"header\">\r\n                <NavLink to=\"/\"><img className=\"header__logo\" src={logo} alt=\"Logo\"/></NavLink>\r\n                <nav className=\"header__nav\">\r\n                    <NavLink to=\"/\"  className=\"header__nav-home\">Home</NavLink>\r\n                    <NavLink to=\"/About\" className=\"header__nav-about\" activeClassName=\"header__active\">About us</NavLink>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}","const DAYS_IN_WEEK = 7;\r\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30 ,31, 30, 31];\r\n\r\nconst Month = {\r\n    January: 0,\r\n    February: 1,\r\n    March: 2,\r\n    April: 3,\r\n    May: 4,\r\n    June: 5,\r\n    July: 6,\r\n    August: 7,\r\n    September: 8,\r\n    October: 9,\r\n    Novermber: 10,\r\n    December: 11\r\n};\r\n\r\nexport function arrEqual(a,b){\r\n    if(!a || !b) return false;\r\n\r\n    return (\r\n        a.getFullYear() === b.getFullYear() &&\r\n        a.getMonth() === b.getMonth() &&\r\n        a.getDate() == b.getDate()\r\n\r\n    )\r\n}\r\n\r\nexport function isLeapYear(year){\r\n    return !((year % 4) || (!(year % 100) && (year % 400)));\r\n}\r\n\r\n\r\nexport function getDaysInMonth(date){\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const daysDaysInMonth = DAYS_IN_MONTH[month];\r\n\r\n    if(isLeapYear(year) && month === Month.February)\r\n    {\r\n        return daysDaysInMonth+1;\r\n    }\r\n    else\r\n    {\r\n        return daysDaysInMonth;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getMonthData(year, month){\r\n    const result = [];\r\n    const date = new Date(year,month);\r\n    const daysInMonth = getDaysInMonth(date);\r\n    const monthStartsOn = date.getDay();\r\n    let day = 1;\r\n\r\n    for(let i= 0;i< (daysInMonth + monthStartsOn) / DAYS_IN_WEEK;i++)\r\n    {\r\n        result[i] = [];\r\n\r\n        for(let j=0; j < DAYS_IN_WEEK; j++){\r\n\r\n            if((i === 0 && j < monthStartsOn) || day > daysInMonth)\r\n            {\r\n                result[i][j] = undefined;\r\n            }\r\n            else\r\n            {\r\n                result[i][j] = new Date(year, month, day++);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import React ,{Component} from 'react';\r\nimport './PopUp.scss';\r\nimport 'material-design-icons-iconfont';\r\n\r\n\r\n\r\nexport default class PopUp extends Component {\r\n    onCLose = ()=> {\r\n        this.props.close()\r\n    }\r\n\r\n    checkMonth(date){\r\n       let  monthNames = ['January','February', 'March','April', 'May','June', 'July', 'August', 'September','October', 'November', 'December']\r\n        return monthNames[date];\r\n    }\r\n\r\n    checkDay(numDay,dayInWeek){\r\n        let weekDayNames = [ 'Sunday','Monday' , 'Tuesday' ,'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n        if(numDay === 1)\r\n        {\r\n            numDay+='st'\r\n        }\r\n        else if(numDay===2)\r\n        {\r\n            numDay+='nd'\r\n        }\r\n        else if(numDay === 3)\r\n        {\r\n            numDay+='rd'\r\n        }\r\n        else if(numDay === 21)\r\n        {\r\n            numDay+='st'\r\n        }\r\n        else if(numDay===22)\r\n        {\r\n            numDay+='nd'\r\n        }\r\n        else if(numDay === 23)\r\n        {\r\n            numDay+='rd'\r\n        }\r\n        else if(numDay===31)\r\n        {\r\n            numDay+='st'\r\n        }\r\n        else{\r\n            numDay+='th'\r\n        }\r\n        return `${numDay} ${weekDayNames[dayInWeek]}`\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"popUp\">\r\n                <div className=\"popUp__icon\">\r\n                <i className=\"material-icons\" onClick={this.onCLose} >close</i>\r\n                </div>\r\n                <div className=\"popUp__content\">\r\n                    <div className=\"popUp__month\">\r\n                        <span className=\"popUp__month-text\">Month</span>\r\n                        <input className=\"popUp__month-input\" type=\"text\" defaultValue={this.checkMonth( this.props.date.getMonth())}></input>\r\n                    </div>\r\n                    <div className=\"popUp__weekDay\">\r\n                        <span className=\"popUp__weekDay-text\">Day</span>\r\n                        <input className=\"popUp__weekDay-input\" type=\"text\" defaultValue={this.checkDay( this.props.date.getDate(),this.props.date.getDay())}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React ,{Component} from 'react';\r\nimport './Calendar.scss';\r\nimport classnames from 'classnames';\r\nimport * as calendar from './Calendar';\r\nimport PopUp from '../popUp/PopUp';\r\n\r\n\r\nexport default class Calendar extends Component {\r\n\r\n    static defaultProps = {\r\n        date:new Date(),\r\n        monthNames: ['January','February', 'March','April', 'May','June', 'July', 'August', 'September','October', 'November', 'December'],\r\n        years:[2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,2022,2023],\r\n        weekDayNames:[ 'S','M' , 'T' ,'W', 'T', 'F', 'S'],\r\n    }\r\n\r\n    state = {\r\n        date: this.props.date,\r\n        currentDate: new Date(),\r\n    }\r\n\r\n    get year(){\r\n        return this.state.date.getFullYear()\r\n    }\r\n\r\n    get month(){\r\n        return this.state.date.getMonth()\r\n    }\r\n    get day(){\r\n        return this.state.date.getDay()\r\n    }\r\n\r\n    handlePrevMonthBtnClick = () =>{\r\n        const date = new Date(this.year, this.month -1);\r\n        this.setState({date});\r\n    };\r\n\r\n    handleNextMonthBtnClick = () =>{\r\n        const date = new Date(this.year, this.month +1);\r\n        this.setState({date});\r\n    };\r\n\r\n    handleDayClick = (date) =>{\r\n         this.props.setDate(date);\r\n         this.props.setDisplay(true);\r\n    };\r\n\r\n    closePopUp = () =>{\r\n\r\n        return this.props.setDisplay(false);\r\n    }\r\n\r\n    render(){\r\n        const {years,monthNames,weekDayNames } =  this.props;\r\n        const monthData = calendar.getMonthData(this.year, this.month);\r\n        const {currentDate, selectedDate} = this.state\r\n        return(\r\n            <div className=\"calendar\">\r\n                <div className=\"calendar__wrapper\">\r\n                    <div className=\"calendar__wrapper-btn\">\r\n                        <button onClick={this.handlePrevMonthBtnClick} className=\"calendar__wrapper-btn-left\">{'<'}</button>\r\n                        <p>\r\n                            { monthNames[this.month]}\r\n                        </p>\r\n                        <p>\r\n                            {this.year}\r\n                        </p>\r\n                        <button onClick={this.handleNextMonthBtnClick} className=\"calendar__wrapper-btn-right\">{'>'}</button>\r\n                    </div>\r\n                    <table className=\"calendar__wrapper-table\">\r\n                        <tbody>\r\n                                {monthData.map((week, index)=>\r\n                                    <tr key={index} className=\"week\">\r\n                                        {week.map((date,index)=> date ?\r\n                                        <td onClick={()=> this.handleDayClick(date)} key={index} \r\n                                            className={classnames('calendar__wrapper-table-day',{\r\n                                            'calendar__wrapper-table-today' : calendar.arrEqual(date,currentDate),\r\n                                            'calendar__wrapper-table-selected': calendar.arrEqual(date,selectedDate)\r\n                                        })}>{date.getDate()}</td>\r\n                                        :\r\n                                        <td key={index} />\r\n\r\n                                    )}\r\n                                </tr>\r\n                                )}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr className=\"calendar__wrapper-table-foot\">\r\n                                {weekDayNames.map((name,index) =>\r\n                                    <th key={index}>{name}</th>\r\n                                    )}\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n                {this.props.display === true ? <PopUp close={this.closePopUp} date={this.props.selectedDate}/> : <></>}\r\n            </div>\r\n        )\r\n    }\r\n}","import React ,{Component} from 'react';\r\nimport './Home.scss'\r\nimport Calendar from '../Calendar/Calendar.jsx';\r\n\r\n\r\nexport default class Header extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"main\">\r\n                <div className=\"main__center\">\r\n                    <div className=\"main__center-title\">\r\n                        <h1>Choose the day for the meeting</h1>\r\n                    </div>\r\n                    <div className=\"main__center-text\">\r\n                        <p>We encourage you to book your appointment online.<br/> This will save you time.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main__rigth\">\r\n                    <Calendar display = {this.props.display} selectedDate={this.props.selectedDate}\r\n                     setDisplay={this.props.setDisplay} \r\n                     setDate={this.props.setDate}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React ,{Component} from 'react';\r\nimport './About.scss';\r\n\r\nexport default class Header extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"about\">    \r\n                <div className=\"about__wrapper\">\r\n                    <h2 className=\"about__wrapper-title\">Lorem ipsum creation timelines</h2>\r\n                        <p className=\"about__wrapper-text \">\r\n                        So how did the classical Latin become so incoherent? According to McClintock,\r\n                        a 15th century typesetter likely scrambled part of Cicero's De Finibus in order\r\n                        to provide placeholder text to mockup various fonts for a type specimen book.\r\n                        </p>\r\n                        <p className=\"about__wrapper-text\">It's difficult to find examples of lorem ipsum in use before Letraset made it \r\n                        popular as a dummy text in the 1960s, although McClintock says he remembers coming\r\n                        across the lorem ipsum passage in a book of old metal type samples.\r\n                        So far he hasn't relocated where he once saw the passage, but the \r\n                        popularity of Cicero in the 15th century supports the theory that \r\n                        the filler text has been used for centuries.\r\n                        </p>\r\n                        <p className=\"about__wrapper-text\">And anyways, as Cecil \r\n                        Adams reasoned, “[Do you really] think graphic arts supply houses were\r\n                        hiring classics scholars in the 1960s?” Perhaps. But it seems reasonable\r\n                        to imagine that there was a version in use far before the age of Letraset.\r\n                        </p>\r\n                        <p className=\"about__wrapper-text\">\r\n                        McClintock wrote to Before & After to explain his discovery; “What I find\r\n                        remarkable is that this text has been the industry's standard dummy \r\n                        text ever since some printer in the 1500s took a galley of type and\r\n                        scrambled it to make a type specimen book; it has survived not only \r\n                        four centuries of letter-by-letter resetting but even the leap into \r\n                        electronic typesetting, essentially unchanged except for an occasional \r\n                        'ing' or 'y' thrown in. It's ironic that when the then-understood Latin\r\n                        was scrambled, it became as incomprehensible as Greek; the phrase 'it's\r\n                        Greek to me' and 'greeking' have common semantic roots!” (The editors\r\n                        published his letter in a correction headlined “Lorem Oopsum”).\r\n                        </p>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Home from './Components/Home/Home';\nimport About from './Components/About/About';\nimport { connect } from 'react-redux';\nimport 'material-design-icons-iconfont';\nimport setDisplayPopAction from '../src/redux/actions/actionDisplay';\nimport setDateAction from './redux/actions/actionDate';\n\nclass App extends Component {\n  render(){\n  return (\n    <div>\n      <Header />\n      <Route exact path=\"/\" render= {()=><Home display = {this.props.display} \n        selectedDate={this.props.date} setDisplay={this.props.setDisplayPop}\n        setDate={this.props.setDate} /> } />\n      <Route path=\"/About\" render={()=><About/> }/>\n    </div>\n  );\n}\n}\n\nfunction mapStateToProps(state){\n  return{\n    display:state.dateInfo.displayPop,\n    date: state.dateInfo.selectedDate\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n    setDisplayPop: display =>{\n      dispatch(setDisplayPopAction(display))\n    },\n    setDate: date =>{\n      dispatch(setDateAction(date))\n    }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","export default function setDisplayPopAction(display){\r\n    return {\r\n        type: 'SET_DISPLAY',\r\n        payload:display\r\n    }\r\n}","export default function setDateAction(date){\r\n    return {\r\n        type: 'SET_DATE',\r\n        payload:date\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const _initialState = {\r\n    displayPop: false,\r\n    selectedDate:{}\r\n}\r\n\r\nexport default function dateInfo(state = _initialState,action){\r\n    switch (action.type){\r\n        case \"SET_DISPLAY\":\r\n            return {...state, displayPop:action.payload}\r\n        case \"SET_DATE\":\r\n            return {...state,selectedDate: action.payload}\r\n        default: \r\n            return state;\r\n    }\r\n}","\r\nimport { combineReducers } from 'redux';\r\nimport dateInfo from './info.js';\r\n\r\nconst rootReduser = combineReducers({\r\n    dateInfo\r\n})\r\n\r\nexport default rootReduser;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReduser from './redux/index.js';\n\nconst store = createStore(rootReduser);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store} >\n          <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}